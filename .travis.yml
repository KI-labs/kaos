---

language: python
python: 3.7
dist: xenial
sudo: required
services:
  - docker
env:
- CHANGE_MINIKUBE_NONE_USER=true K8S_VER=1.9.0 K6T_VER=0.3.0 M6E_VER=v0.25.2 TF_VERSION=0.12.7

jobs:
  include:
    - stage: Backend tests
      script: cd backend && make test-unit
    - stage: Install KAOS
      script: pip3 install ./model && cd cli && pip3 install -e . && kaos
    - stage: Integration tests
      before_script:
        - sudo rm -rf /var/lib/apt/lists/*
        - sudo apt-get update && sudo apt-get install coreutils

        # install cli requirements
        - pip3 install ./model
        - sudo apt-get install unzip
        - wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
        - unzip terraform_${TF_VERSION}_linux_amd64.zip
        - sudo mv terraform /usr/local/bin/
        - terraform --version
        - sudo apt-get install graphviz

        # install minikube & kubectl
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VER/bin/linux/amd64/kubectl && sudo chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/$M6E_VER/minikube-linux-amd64 && sudo chmod +x minikube && sudo mv minikube /usr/local/bin/
        - sudo minikube start --vm-driver=none --kubernetes-version=v$K8S_VER --cpus 2 --memory 4096 --bootstrapper localkube
        - minikube update-context
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
        - sudo apt-get install socat
      script:
        # install cli & build kaos
        - export KAOS_HOME=`pwd`
        - cd cli && pip3 install -e . && kaos && cd ../testing/integration
        - kaos build -c MINIKUBE -fvy
        - ls -la .
        - cat .kaos/config
        - export AMBASSAROR_POD_NAME=`kubectl get pods | awk '{print $1}' | sed -n -e '/^ambassador/p'`
        - export BACKEND_POD_NAME=`kubectl get pods | awk '{print $1}' | sed -n -e '/^backend/p'`
        - echo $AMBASSAROR_POD_NAME

        - export K8S_PORT=30123

        # set up port forwarding in order to access the ambassador endpoint
        - kubectl port-forward $AMBASSAROR_POD_NAME $K8S_PORT:8080 &
        - kubectl get all

        # basic test case
        - pip3 install -e .
        - pytest --k8s-port=$K8S_PORT --capture=no

        - kubectl logs $AMBASSAROR_POD_NAME
        - kubectl logs $BACKEND_POD_NAME
#    - stage: Deploy Terraform
#      script: bash scripts/ci/build.sh
notifications:
  slack: kaos-dev:axjjHl3KNB2C1RRWe1hHEP4i
