import os

# HANDLE CLOUD PROVIDER
CLOUD_PROVIDER = os.getenv("CLOUD_PROVIDER")
LOCAL = "LOCAL"

# HANDLE CLOUD PROVIDER
MAX_GPU = int(os.getenv("MAX_GPU", 0))
MAX_CPU = float(os.getenv("MAX_CPU", 0))
MAX_MEMORY = float(os.getenv("MAX_MEMORY", 0))

# INGESTION DIRS PREFICES
MANUAL_DATA_DIR_PREFIX = "manual_data"
MANIFEST_DIR_PREFIX = "manifest"

# HANDLE CLOUD-SPECIFIC REGISTRY
DOCKER_REGISTRY = os.getenv("DOCKER_REGISTRY")
REGION = os.getenv("REGION")

# HANDLE DYNAMIC DOCKER REGISTRY
BUILD_IMAGE = os.environ.get('BUILD_IMAGE', 'build-base')
INGESTION_IMAGE = os.environ.get('INGESTION_IMAGE', 'kaos-ingestion')

# BUILD-TRAIN PIPELINE
TRAIN_SOURCE_REPO_PREFIX = "source-train"
BUILD_TRAIN_PIPELINE_PREFIX = "build-train"
TRAIN_IMAGE_REPO_PREFIX = BUILD_TRAIN_PIPELINE_PREFIX  # output from BUILD-TRAIN

# INGESTION PIPELINE
MANIFEST_REPO_PREFIX = "data-manifest"
INGESTION_PIPELINE_PREFIX = "ingestion"

# TRAIN PIPELINE
TRAIN_DATA_REPO_PREFIX = INGESTION_PIPELINE_PREFIX
TRAIN_DATA_MOUNT_PATH = "data"
TRAIN_PIPELINE_PREFIX = "train"
HYPER_REPO_PREFIX = "hyper"
EMPTY_HYPER_FILE = "params.null"
EMPTY_DATA_FILE = "data:null"
EMPTY_IMAGE_NAME = "image:null"
EMPTY_REGISTRY_NAME = "null"
MODEL_REPO_PREFIX = TRAIN_PIPELINE_PREFIX  # OUTPUT from TRAIN

# BUILD-SERVE PIPELINE
SERVE_SOURCE_REPO_PREFIX = "source-serve"
BUILD_SERVE_PIPELINE_PREFIX = "build-serve"
SERVE_IMAGE_REPO_PREFIX = BUILD_SERVE_PIPELINE_PREFIX

# SERVE PIPELINE
SERVE_PIPELINE_PREFIX = "serve"

# BUILD-NOTEBOOK PIPELINE
NOTEBOOK_DATA_REPO_PREFIX = "data-notebook"
NOTEBOOK_SOURCE_REPO_PREFIX = "source-notebook"
BUILD_NOTEBOOK_PIPELINE_PREFIX = "build-notebook"
NOTEBOOK_IMAGE_REPO_PREFIX = BUILD_NOTEBOOK_PIPELINE_PREFIX

# NOTEBOOK PIPELINE
NOTEBOOK_PIPELINE_PREFIX = "notebook"

# FIXED STATE (from pachyderm)
PIPELINE_STATE = {
    0: "PIPELINE_STARTING",
    1: "PIPELINE_RUNNING",
    2: "PIPELINE_RESTARTING",
    3: "PIPELINE_FAILURE",
    4: "PIPELINE_PAUSED",
    5: "PIPELINE_STANDBY",
}

JOB_STATE = {
    0: "JOB_STARTING",
    1: "JOB_RUNNING",
    2: "JOB_FAILURE",
    3: "JOB_SUCCESS",
    4: "JOB_KILLED",
    5: "JOB_MERGING",
}

# TODO -> will this break (defined in BASE-SERVE image)
PRED_ROUTE = "invocations"

SERVICE_HOST = os.getenv("SERVICE_HOSTNAME")\
    if os.getenv("SERVICE_HOSTNAME") not in ("", None) else os.getenv("SERVICE_IP")

assert SERVICE_HOST != "", "SERVICE_HOSTNAME or SERVICE_IP env var should be set"
